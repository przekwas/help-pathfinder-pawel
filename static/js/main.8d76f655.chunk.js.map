{"version":3,"sources":["utils/make-grid.js","utils/count-reducer.js","components/Tile.jsx","components/Row.jsx","App.jsx","serviceWorker.js","index.js"],"names":["makeGrid","plusOrMinusOrZero","rows","cols","grid","seed","Math","floor","random","i","row","Array","fill","push","console","log","initialState","incorrect","correct","gameRow","disabled","countReducer","state","action","type","payload","TileStyle","styled","div","hitOrMiss","rowDim","Tile","tile","setRowDim","whichRow","dispatch","useState","setHitOrMiss","clicked","setClicked","onClick","e","Number","target","id","GameRow","Row","tiles","rest","map","key","Layout","Totals","Menu","Flexed","SmallText","small","LockedIn","Correct","span","Incorrect","App","useReducer","counts","setCounts","handleChange","persist","name","value","useLayoutEffect","onChange","min","max","slice","colCount","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8d76f655.chunk.js","sourcesContent":["export const makeGrid = ({ rows, cols }) => {\r\n\tconst grid = [];\r\n\r\n\tlet plusOrMinusOrZero,\r\n\t\tseed = Math.floor(Math.random() * cols);\r\n\r\n\tfor (let i = 0; i < rows; i++) {\r\n\t\tlet row = Array(cols).fill(1);\r\n\t\tlet random = Math.random();\r\n\r\n\t\tif (random < 0.33) {\r\n\t\t\tplusOrMinusOrZero = -1;\r\n\t\t} else if (random > 0.33 && random < 0.66) {\r\n\t\t\tplusOrMinusOrZero = 0;\r\n\t\t} else if (random > 0.66 && random < 0.99) {\r\n\t\t\tplusOrMinusOrZero = 1;\r\n\t\t}\r\n\r\n\t\tif (i === 0) {\r\n\t\t\trow[seed] = 0;\r\n\t\t\tgrid.push(row);\r\n\t\t} else {\r\n\t\t\tseed += plusOrMinusOrZero;\r\n\r\n\t\t\tif (seed > cols - 1) {\r\n\t\t\t\tlet backOneOrTwo = Math.random() > 0.55 ? -1 : -2;\r\n\t\t\t\tseed += backOneOrTwo;\r\n\t\t\t} else if (seed < 0) {\r\n\t\t\t\tlet nextOneOrTwo = Math.random() > 0.55 ? 1 : 2;\r\n\t\t\t\tseed += nextOneOrTwo;\r\n\t\t\t}\r\n\r\n\t\t\trow[seed] = 0;\r\n\t\t\tgrid.push(row);\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.log(grid);\r\n\r\n\treturn grid;\r\n};\r\n","import { makeGrid } from './make-grid';\r\n\r\nexport const initialState = {\r\n\tincorrect: 0,\r\n\tcorrect: 0,\r\n\tgameRow: 0,\r\n\tdisabled: false,\r\n\tgrid: makeGrid({ rows: 10, cols: 10 })\r\n};\r\n\r\nexport const countReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'RIGHT':\r\n\t\t\treturn { ...state, correct: state.correct + 1, gameRow: state.gameRow + 1 };\r\n\t\tcase 'WRONG':\r\n\t\t\treturn { ...state, incorrect: state.incorrect + 1 };\r\n\t\tcase 'GRID_CHANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgrid: makeGrid({ rows: action.payload.rows, cols: action.payload.cols })\r\n\t\t\t};\r\n\t\tcase 'DISABLE':\r\n\t\t\treturn { ...state, disabled: true };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Tile = ({ tile, rowDim, setRowDim, gameRow, whichRow, dispatch }) => {\r\n\tconst [hitOrMiss, setHitOrMiss] = useState(null);\r\n\tconst [clicked, setClicked] = useState(false);\r\n\r\n\tconst tileClick = e => {\r\n\t\tif (clicked || rowDim || gameRow !== whichRow) return;\r\n\t\tif (Number(e.target.id) === 0) {\r\n\t\t\tsetHitOrMiss('right');\r\n\t\t\tsetRowDim(true);\r\n\t\t\tdispatch({ type: 'RIGHT' });\r\n\t\t\tdispatch({ type: 'DISABLE' });\r\n\t\t} else {\r\n\t\t\tsetHitOrMiss('wrong');\r\n\t\t\tdispatch({ type: 'WRONG' });\r\n\t\t\tdispatch({ type: 'DISABLE' });\r\n\t\t}\r\n\t\tsetClicked(true);\r\n\t};\r\n\r\n\treturn <TileStyle hitOrMiss={hitOrMiss} rowDim={rowDim} onClick={tileClick} id={tile} />;\r\n};\r\n\r\nconst TileStyle = styled.div`\r\n\tborder: 1.5px solid black;\r\n\tborder-radius: 5px;\r\n\tbox-sizing: border-box;\r\n\theight: 25px;\r\n\twidth: 25px;\r\n\tmargin: 0px 3px;\r\n\t@media (min-width: 768px) {\r\n\t\theight: 50px;\r\n\t\twidth: 50px;\r\n\t\tmargin: 0px 2px;\r\n\t}\r\n\t${({ hitOrMiss }) => {\r\n\t\tswitch (hitOrMiss) {\r\n\t\t\tcase null:\r\n\t\t\t\treturn 'background-color: #2b6cb0;';\r\n\t\t\tcase 'right':\r\n\t\t\t\treturn 'background-color: #2f855a !important;';\r\n\t\t\tcase 'wrong':\r\n\t\t\t\treturn 'background-color: #9b2c2c !important;';\r\n\t\t}\r\n\t}}\r\n\t${({ rowDim }) => rowDim && 'background-color: #4a5568;'}\r\n`;\r\n\r\nexport default Tile;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Tile from './Tile';\r\n\r\nconst Row = ({ tiles, gameRow, whichRow, ...rest }) => {\r\n\tconst [rowDim, setRowDim] = useState(false);\r\n\r\n\treturn (\r\n\t\t<GameRow gameRow={gameRow} whichRow={whichRow}>\r\n\t\t\t{tiles.map((tile, i) => (\r\n\t\t\t\t<Tile\r\n\t\t\t\t\tkey={`col-${i}`}\r\n\t\t\t\t\ttile={tile}\r\n\t\t\t\t\trowDim={rowDim}\r\n\t\t\t\t\tgameRow={gameRow}\r\n\t\t\t\t\twhichRow={whichRow}\r\n\t\t\t\t\tsetRowDim={setRowDim}\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</GameRow>\r\n\t);\r\n};\r\n\r\nconst GameRow = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tpadding: 5px 10px;\r\n\t${({ gameRow, whichRow }) =>\r\n\t\tgameRow === whichRow &&\r\n\t\t`\r\n\tbackground-color: #4fd1c5;\r\n\tborder: 1px solid #234e52;\r\n\tborder-radius: 5px;\r\n`}\r\n`;\r\n\r\nexport default Row;\r\n","import React, { useReducer, useState, useLayoutEffect } from 'react';\r\nimport { countReducer, initialState } from './utils/count-reducer';\r\nimport styled from 'styled-components';\r\nimport Row from './components/Row';\r\n\r\nconst App = () => {\r\n\tconst [state, dispatch] = useReducer(countReducer, initialState);\r\n\tconst [counts, setCounts] = useState({\r\n\t\trows: 10,\r\n\t\tcols: 10\r\n\t});\r\n\tconst [disabled, setDisabled] = useState(false);\r\n\r\n\tconst handleChange = e => {\r\n\t\te.persist();\r\n\t\tsetCounts(state => ({ ...state, [e.target.name]: Number(e.target.value) }));\r\n\t};\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tdispatch({ type: 'GRID_CHANGE', payload: counts });\r\n\t}, [counts]);\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Totals>\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Flexed>\r\n\t\t\t\t\t\t{!state.disabled ? (\r\n\t\t\t\t\t\t\t<SmallText>{counts.rows} / 20 rows</SmallText>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<LockedIn>{counts.rows} rows</LockedIn>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tdisabled={state.disabled}\r\n\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\tname=\"rows\"\r\n\t\t\t\t\t\t\tvalue={counts.rows}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tmin=\"5\"\r\n\t\t\t\t\t\t\tmax=\"20\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Flexed>\r\n\t\t\t\t\t<Flexed>\r\n\t\t\t\t\t\t{!state.disabled ? (\r\n\t\t\t\t\t\t\t<SmallText>{counts.cols} / 20 cols</SmallText>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<LockedIn>{counts.cols} cols</LockedIn>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tdisabled={state.disabled}\r\n\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\tname=\"cols\"\r\n\t\t\t\t\t\t\tvalue={counts.cols}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tmin=\"5\"\r\n\t\t\t\t\t\t\tmax=\"20\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Flexed>\r\n\t\t\t\t</Menu>\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<h5>\r\n\t\t\t\t\t\tTotal Correct: <Correct>{state.correct}</Correct>\r\n\t\t\t\t\t</h5>\r\n\t\t\t\t\t<h5>Total Guesses: {state.correct + state.incorrect}</h5>\r\n\t\t\t\t\t<h5>\r\n\t\t\t\t\t\tTotal Wrong: <Incorrect>{state.incorrect}</Incorrect>\r\n\t\t\t\t\t</h5>\r\n\t\t\t\t</Menu>\r\n\t\t\t</Totals>\r\n\t\t\t{state.grid.slice(0, counts.rows).map((row, i) => (\r\n\t\t\t\t<Row\r\n\t\t\t\t\tkey={`row-${i}`}\r\n\t\t\t\t\twhichRow={i}\r\n\t\t\t\t\tcolCount={counts.cols}\r\n\t\t\t\t\tgameRow={state.gameRow}\r\n\t\t\t\t\ttiles={row}\r\n\t\t\t\t\tdispatch={dispatch}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nconst Layout = styled.div`\r\n\tbackground-color: #edf2f7;\r\n\tmin-height: 100vh;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: flex-start;\r\n\tfont-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Totals = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: space-between;\r\n\tborder-bottom: 2px solid black;\r\n\tmargin-bottom: 10px;\r\n\tmin-width: 50vw;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n`;\r\n\r\nconst Flexed = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tmargin-top: 10px;\r\n`;\r\n\r\nconst SmallText = styled.small`\r\n\tmargin: 0 0 10px 0;\r\n`;\r\n\r\nconst LockedIn = styled.small`\r\n\tmargin: 0 0 10px 0;\r\n\tfont-weight: 900;\r\n`;\r\n\r\nconst Correct = styled.span`\r\n\tcolor: #2f855a;\r\n`;\r\n\r\nconst Incorrect = styled.span`\r\n\tcolor: #9b2c2c;\r\n`;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}